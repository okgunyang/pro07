package kr.go.molab.util;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.URL;

public class FileManager {
	public void fileUpload(String path) {
		BufferedInputStream bi = null;
		FileOutputStream fo = null;
		
		final String DOWNLOAD_URL = "https://blog.kakaocdn.net/dn/bhK3bF/btqZ3fko0Nb/GXa1NlyVQzNhT4GYZDeoL1/uploadTestFile.txt?attach=1&knm=tfile.txt";
		final String UPLOAD_PATH = path;
		final int MAX_SIZE = 20 * 1024 * 1024; // 20MB
		
		try {
			File file = new File(UPLOAD_PATH);
			if(!file.exists()) { // 폴더가 존재하는지 확인
				file.mkdirs(); // 폴더 경로가 없을 경우 폴더 경로 생성
			}
			
			String fileName = "테스트메모장.txt"; 
			
			bi = new BufferedInputStream(new URL(DOWNLOAD_URL).openStream());
			fo = new FileOutputStream(UPLOAD_PATH + "/" + fileName); // 파일이 저장될 위치
			
			byte buffer[] = new byte[1024]; // 최대 1KB씩 저장
			int len;
			long fileSize = 0;
			
			while((len = bi.read(buffer, 0, buffer.length)) != -1) { // 파일을 읽으며 buffer에 최대 buffer길이만큼 저장
				fo.write(buffer, 0, len); // buffer의 0~len에 담긴 파일 내용을 저장
				fileSize = fileSize + len;
				
				if(fileSize > MAX_SIZE) { // 최대 범위를 초과할 경우 파일 업로드 종료
					break;
				}
			}
			
			fo.close();
			bi.close();
			
			if(fileSize <= MAX_SIZE) {
				System.out.println("파일 업로드 완료!");
				System.out.println("파일 크기: " + fileSize + "Byte");
			} else {
				new File(UPLOAD_PATH + "/" + fileName).delete();
				System.out.println("파일 최대 사이즈 초과로 파일 삭제 처리!");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
