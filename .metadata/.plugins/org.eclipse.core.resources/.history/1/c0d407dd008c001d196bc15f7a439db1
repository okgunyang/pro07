package kr.go.molab.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.MultipartRequest;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class AttachController {
	private static final Logger log = LoggerFactory.getLogger(AttachController.class);
	
	@GetMapping("/fileUpload")
	public String uploadForm() {
		return "data/fileUpload";
	}

	@PostMapping("/fileUpload")
	public String upload(MultipartHttpServletRequest multipartRequest) throws ServletException, IOException {
		//String uploadPath = "D:\\kim6\\pro07\\pro07\\src\\main\\webapp\\resources\\upload";
		String uploadPath = "D:/kim6/pro07/pro07/src/main/webapp/resources/upload";
		//String uploadPath = request.getRealPath("/upload/");
		int size = 10*1024*1024;
		String proPic = "";
				
		MultipartRequest multi = new MultipartRequest(request, uploadPath, size, "UTF-8", new DefaultFileRenamePolicy());	      
		proPic = multi.getParameter("file");
		log.info("파일 이름 : "+proPic);
		return "redirect:/";   
	}
	
	@GetMapping("/fileUpload2")
	public String uploadForm2() {
		return "data/fileUpload2";
	}
	
	@GetMapping("/fileUpload3")
	public String uploadForm3() {
		return "data/fileUpload3";
	}
	
	// 이미지 업로드 처리 - org.springframework.web.multipart.MultipartFile를 이용하는 경우
	@PostMapping("/fileUpload3")
	public String upload3(HttpServletRequest request, RedirectAttributes rttr,
			List<MultipartFile> files) throws Exception {
		//=========== 파일 업로드 작업 시작 ==============
		log.info("files 매개변수 : " + files);
		if (files != null) {
			log.info("업로드한 첨부파일 개수 : " + files.size());
		}
		
		ServletContext application = request.getSession().getServletContext();
		String realPath = application.getRealPath("/resources/upload");
		log.info("realPath : " + realPath);
		
		
		// 폴더 동적 생성하기 /resources/upload/2021/06/15
		File uploadPath = new File(realPath, getDateFolder()); //운영 서버 디렉토리

		if (!uploadPath.exists()) {
			uploadPath.mkdirs();  //운영 서버 디렉토리 생성
		}
				
		for (MultipartFile multipartFile : files) {
			if (multipartFile.isEmpty()) {
				continue;
			}
			
			String uploadFilename = multipartFile.getOriginalFilename();
			
			UUID uuid = UUID.randomUUID();
			uploadFilename = uuid.toString() + "_" + uploadFilename;
			log.info("업로드 파일 경로 및 이름 : "+uploadFilename);
			// 운영 서버에 파일 업로드 수행
			multipartFile.transferTo(new File(uploadPath, uploadFilename));
		} // for
				
		//=========== 파일 업로드 작업 끝 ==============
						
		return "redirect:/";
	} //post upload process
	
	
	private String getDateFolder() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		String str = sdf.format(date);
		return str;
	}
}
