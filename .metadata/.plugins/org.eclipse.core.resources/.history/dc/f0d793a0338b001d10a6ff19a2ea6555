package kr.go.molab.util;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

public class UserAuthenticationService implements UserDetailsService {
	
    private SqlSessionTemplate sqlSession;
    public UserAuthenticationService() {     }
    public UserAuthenticationService(
        SqlSessionTemplate sqlSession) {
        this.sqlSession=sqlSession;
    }
    
	@Override
	public UserDetails loadUserByUsername(String userid) throws UsernameNotFoundException {
        //사용자 아이디 확인 (mapper에서 map에 담아 전달된 사용자의 아이디)
        Map<String,Object> user=sqlSession.selectOne("user.selectUser", userid);
        
        //아이디가 없으면 예외 발생
        if(user==null) throw new UsernameNotFoundException(userid);
        
        //사용권한 목록
        List<GrantedAuthority> authority=new ArrayList<>();
        // 오라클에서는 필드명을 대문자로 적어야 함
        // 오라클에서는 BigInteger 관련 오류가 발생할 수 있으므로 아래와 같이 처리 
        // 속성이름을 대문자로 작성해야 에러가 발생하지 않는다.
        //(Integer)Integer.valueOf(user.get("ENABLED").toString()) == 1
        
	    authority.add(new SimpleGrantedAuthority(user.get("AUTHORITY").toString())); 
	 
	        //필드명은 대문자로
	        return new UserDTO(user.get("USERNAME").toString(),
	                user.get("PASSWORD").toString(),
	                //1과 같으면 사용가능한 계정이고, 0이면 사용불가능한 계정이다.	                
	                //ENABLED는 1이라는 의미
	                (Integer)Integer.valueOf(user.get("ENABLED").toString())==1,
	                true,true,true,authority,
	                user.get("USERNAME").toString());
	    }
	}	
}