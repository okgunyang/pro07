<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	<title>채팅방</title>
	<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap" rel="stylesheet">
	<!-- JUA 폰트-->
	<link href="https://fonts.googleapis.com/css2?family=Jua&display=swap" rel="stylesheet">
	<script src="https://code.jquery.com/jquery-latest.min.js"></script>
	<script src="${pageContext.request.contextPath }/resources/sockjs.0.3.4.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
	<style>
	.chatcontent { height: 700px; width : 100%; overflow-y: scroll; }
	</style>
</head>
<body>
    <!-- 채팅 창 -->
    <div class="chatcontent">
    </div>
    <div id="list-chat">
    </div>
    
    <!-- 채팅 방 관련 -->
    <script>
    $(function() {

    	var sock = new SockJS("${pageContext.request.contextPath}/endpoint");
    	var client = Stomp.over(sock);
        
        	client.connect({},function() {
    			//메세지 들어오는곳 == 구독한 채팅 채널
                //roomNo는 채팅창 접속하는 url에 get방식의 값으로 연결해줌
                //ex)채팅url?roomNo=13 이면 jsp el태그로 ${roomNo}로 가져와서 사용
    			client.subscribe('/subscribe/chat/'+ roomNo,function(chat) {
    			//받은 데이터
    			var content = JSON.parse(chat.body);
    			//후에 받은 데이터를 html코드로 뿌려주면 됨					
    			});
                                
           });

    });
    client.send('/app/hello/' + roomNo, {}, JSON
			.stringify({
				chatContent : message,
				memberId : "${loginMember.memberId}"

	}));
    $(document).ready(function(){
    	$(".chatcontent").scroll(function() {
    		var $window = $(this);
    		var scrollTop = $window.scrollTop();

    		// scrollbar의 위치가 위의1px까지 도달 &&
            // 스크롤 이벤트로 fetchList()가 불려서 채팅 리스트를 가져오는 중이 아니라면
            // fetchList()를 통해 채팅 리스트를 가져옴
    		if (scrollTop < 1 && isScrolled == false) {
    			isScrolled = true;
    			fetchList();

    		}
    	});
    	
    	var fetchList = function() {
    		
            //이미 처음 데이터까지 가져온 경우라면 더이상 db접근이 필요 없음.
    		if (isEnd == true) {
    			return;
    		}

    		// 채팅 리스트를 가져올 때 시작 번호
    		// 가장 상단 채팅의 data-no값을 가져옴 
    		var endNo = $("#list-chat li").first().data("no") || 0;
    		
            //컨트롤러단에 채팅 리스트 요구함
    		$.ajax({
    			url : "${pageContext.request.contextPath}/chat/chatList.do?endNo="
    					+ endNo + "&roomNo=${roomNo}",
    			type : "GET",
    			dataType : "json",
    			success : function(result) {

	  				// 컨트롤러에서 가져온 방명록 리스트는 result.data에 담김
	  				var length = result.size;
	                  
	                  //가져온게 10개 미만이면 처음까지 가져온것
	  				if (length < 10) {
	  					isEnd = true;
	  				}
	                  //가져온 데이터마다 채팅 리스트로 만들기
	                  //vo에 chat객체 한개가 담김
	  				$.each(result, function(index, vo) {
	  					var html = renderList(vo,0);
	  					$("#list-chat").prepend(html);
	
	  				});
	  				var position = $('[data-no='+endNo+']').prev().offset();//위치값
					//해당 위치로 스크롤 이동
					document.querySelector('.chatcontent').scrollTo({top : position.top,behavior : 'auto'});
					//스크롤중 변수를 false로 돌려놔줌 -> 다시 업스크롤 일어나면 채팅리스트 가져올 수 있게
	                isScrolled = false;
				},
				error : function(xhr, status, err) {
					console.log("처리실패!");
					console.log(xhr);
					console.log(status);
					console.log(err);
				}
			});      
			var renderList = function(vo,endNo) {
					
					// 리스트 html을 정의
					var date = moment(vo.sendDate).format('YY/MM/DD HH:mm');
					var html = "";
					if(endNo==0) endNo = vo.no;
					
					//내가 보낸 채팅일 경우
					if(vo.memberId=="${loginMember.memberId}"){
						//신고된 채팅일 경우
						var content ="";
						if(vo.vaildYN == 'Y'){
							content = "<p class='myChat text-muted p-2'><b>신고된 채팅입니다.</b></p>";
						}
						if(vo.vaildYN != 'Y'){
							content = "<p class='myChat text-left p-2'>"+vo.chatContent+"</p>";
						}
					
					html = 	"<li class='me pr-2' data-no='"+ endNo +"'>"
							+ "<strong>" + vo.memberId + "</strong>"
							+"<div class='me'>"
							+ "<strong style='display : inline;' class='align-self-end'>" + date + "</strong>"
							+ content
							+"</div>"
							+ "</li>";
					

					}
					//남이 보낸 채팅일 경우
					else{
						//신고된 채팅일 경우
						var content ="";
						var report ="";
						if(vo.vaildYN == 'Y'){
							content = "<p class='otherChat bg-light text-muted p-2'><b>신고된 채팅입니다.</b></p>";
						}
						if(vo.vaildYN != 'Y'){
							content = "<p class='otherChat bg-light p-2'>"+vo.chatContent+"</p>";
							report = "신고";
						}
						html = "<li class='pl-2' data-no='"+ vo.no +"'>"
							+ "<strong>" + vo.memberId + "</strong>"
							+"<div class='row ml-0'>"
							+ content
							+ "<strong class='align-self-center'>" + date + "<a href='#' class='reportModalK'>"+report+"</a></strong>"
							+"</div>"
							+ "</li>";
					
					}
					return html;
						
					

				}
    });
    </script>
</body>
</html>
