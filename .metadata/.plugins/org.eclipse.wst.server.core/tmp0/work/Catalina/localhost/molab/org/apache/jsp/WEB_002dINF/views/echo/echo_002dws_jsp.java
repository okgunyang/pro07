/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2023-01-11 09:14:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.echo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class echo_002dws_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/kim6/pro07/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro07/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/kim6/pro07/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro07/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1655111721682L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\r\n");
      out.write("	<title>상담 채팅</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("	<script src=\"../resources/sockjs.min.js\"></script>\r\n");
      out.write("	<script src=\"https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js\"></script>\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form id=\"chatForm\">\r\n");
      out.write("    	<input type=\"hidden\" id=\"session_id\" name=\"session_id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("        <div class=\"chat_start_main\" style=\"padding:18px;font-weight:800;\">상담 CHAT</div>\r\n");
      out.write("        <div class=\"chat_main\" style=\"display:none;\">\r\n");
      out.write("            <div class=\"modal-header\" style=\"height:20%;padding:18px;font-weight:800;\">\r\n");
      out.write("                상담 CHAT \r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"modal-content\" id=\"chat\" style=\"height:60%;\">\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <input type=\"text\" id=\"message\" class=\"form-control\" style=\"height:20%;\" placeholder=\"메세지를 입력하세요\"/>    \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("<!--         <button class=\"\">send</button> -->\r\n");
      out.write("    </form>\r\n");
      out.write("    <script>\r\n");
      out.write("	//전역변수 선언-모든 홈페이지에서 사용 할 수 있게 index에 저장\r\n");
      out.write("	var socket = null;\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("	    if($(\"#session_id\").val()!=\"\"){\r\n");
      out.write("	            connectWS();\r\n");
      out.write("	    } else {\r\n");
      out.write("	    	$(\"#message\").val(\"로그인 중이 아닙니다.\");\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("    $(\".chat_start_main\").click(function(){\r\n");
      out.write("        $(this).css(\"display\",\"none\");\r\n");
      out.write("        $(\".chat_main\").css(\"display\",\"inline\");\r\n");
      out.write("    })\r\n");
      out.write("    $(\".chat_main .modal-header\").click(function(){\r\n");
      out.write("        $(\".chat_start_main\").css(\"display\",\"inline\");\r\n");
      out.write("        $(\".chat_main\").css(\"display\",\"none\");\r\n");
      out.write("    });\r\n");
      out.write(" \r\n");
      out.write("    function connectWS(){\r\n");
      out.write("        var sock = new SockJS(\"/echo\");\r\n");
      out.write("            socket = sock;\r\n");
      out.write("        sock.onopen = function() {\r\n");
      out.write("               console.log('info: connection opened.');\r\n");
      out.write("        };\r\n");
      out.write("        sock.onmessage = function(e){\r\n");
      out.write("//             console.log(e);\r\n");
      out.write("//             var strArray = e.data.split(\":\");\r\n");
      out.write("//             if(e.data.indexof(\":\") > -1){\r\n");
      out.write("//                 $(\".chat_start_main\").text(strArray[0]+\"님이 메세지를 보냈습니다.\");\r\n");
      out.write("//             }\r\n");
      out.write("//             else{\r\n");
      out.write("//             }\r\n");
      out.write("            $(\"#chat\").append(e.data + \"<br/>\");\r\n");
      out.write("        }\r\n");
      out.write("        sock.onclose = function(){\r\n");
      out.write("            $(\"#chat\").append(\"연결 종료\");\r\n");
      out.write("//              setTimeout(function(){conntectWs();} , 10000); \r\n");
      out.write("        }\r\n");
      out.write("        sock.onerror = function (err) {console.log('Errors : ' , err);};\r\n");
      out.write(" \r\n");
      out.write("        $(\"#chatForm\").submit(function(event){\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("                sock.send($(\"#message\").val());\r\n");
      out.write("                $(\"#message\").val('').focus();    \r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
